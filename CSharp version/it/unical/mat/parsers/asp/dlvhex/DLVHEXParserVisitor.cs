//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from DLVHEXParser.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="DLVHEXParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public interface IDLVHEXParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>GroundQuery</c>
	/// labeled alternative in <see cref="DLVHEXParser.answer_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGroundQuery([NotNull] DLVHEXParser.GroundQueryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Model</c>
	/// labeled alternative in <see cref="DLVHEXParser.answer_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModel([NotNull] DLVHEXParser.ModelContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DLVHEXParser.atoms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtoms([NotNull] DLVHEXParser.AtomsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DLVHEXParser.cost"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCost([NotNull] DLVHEXParser.CostContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DLVHEXParser.level"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLevel([NotNull] DLVHEXParser.LevelContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DLVHEXParser.output"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOutput([NotNull] DLVHEXParser.OutputContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DLVHEXParser.predicate_atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredicate_atom([NotNull] DLVHEXParser.Predicate_atomContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DLVHEXParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] DLVHEXParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DLVHEXParser.witness"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWitness([NotNull] DLVHEXParser.WitnessContext context);
}

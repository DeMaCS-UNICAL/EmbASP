//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from DLVHEXLexer.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class DLVHEXLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		HEADER=1, WHITE_SPACE=2, COLON=3, COMMA=4, COST_BEGIN=5, COST_END=6, INTEGER=7, 
		LEVEL_BEGIN=8, LEVEL_END=9, GROUND_QUERY_BEGIN=10, ANSWER_SET_BEGIN=11, 
		ANSWER_SET_END=12, IDENTIFIER=13, STRING_CONSTANT=14, TERMS_BEGIN=15, 
		TERMS_END=16, REASONING=17, DOT=18, BOOLEAN=19, WHITESPACE_IN_GROUND_QUERY=20, 
		WITNESS_LABEL=21;
	public const int
		IN_GROUND_QUERY=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "IN_GROUND_QUERY"
	};

	public static readonly string[] ruleNames = {
		"HEADER", "WHITE_SPACE", "COLON", "COMMA", "COST_BEGIN", "COST_END", "INTEGER", 
		"LEVEL_BEGIN", "LEVEL_END", "GROUND_QUERY_BEGIN", "ANSWER_SET_BEGIN", 
		"ANSWER_SET_END", "IDENTIFIER", "STRING_CONSTANT", "TERMS_BEGIN", "TERMS_END", 
		"REASONING", "DOT", "BOOLEAN", "WHITESPACE_IN_GROUND_QUERY", "WITNESS_LABEL", 
		"NL", "WS"
	};


	public DLVHEXLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public DLVHEXLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "':'", "','", "'<'", "'>'", null, "'['", "']'", "' is '", 
		"'{'", "'}'", null, null, "'('", "')'", null, "'.'", null, null, "', evidenced by'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "HEADER", "WHITE_SPACE", "COLON", "COMMA", "COST_BEGIN", "COST_END", 
		"INTEGER", "LEVEL_BEGIN", "LEVEL_END", "GROUND_QUERY_BEGIN", "ANSWER_SET_BEGIN", 
		"ANSWER_SET_END", "IDENTIFIER", "STRING_CONSTANT", "TERMS_BEGIN", "TERMS_END", 
		"REASONING", "DOT", "BOOLEAN", "WHITESPACE_IN_GROUND_QUERY", "WITNESS_LABEL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DLVHEXLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static DLVHEXLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x17', '\xBC', '\b', '\x1', '\b', '\x1', '\x4', '\x2', 
		'\t', '\x2', '\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', 
		'\x5', '\t', '\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', 
		'\x4', '\b', '\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', 
		'\x4', '\v', '\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', 
		'\x4', '\xE', '\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', 
		'\x10', '\x4', '\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', 
		'\x13', '\t', '\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', 
		'\x15', '\x4', '\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', 
		'\x18', '\t', '\x18', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\a', '\x2', '<', '\n', '\x2', '\f', '\x2', '\xE', '\x2', '?', 
		'\v', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x5', '\x3', 'G', '\n', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\a', '\b', 'V', '\n', '\b', '\f', '\b', '\xE', '\b', 'Y', 
		'\v', '\b', '\x5', '\b', '[', '\n', '\b', '\x3', '\t', '\x3', '\t', '\x3', 
		'\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', 
		'\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', 
		'\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\a', '\xE', 'n', '\n', 
		'\xE', '\f', '\xE', '\xE', '\xE', 'q', '\v', '\xE', '\x3', '\xF', '\x3', 
		'\xF', '\a', '\xF', 'u', '\n', '\xF', '\f', '\xF', '\xE', '\xF', 'x', 
		'\v', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x5', '\x12', 
		'\x91', '\n', '\x12', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', 
		'\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x5', 
		'\x14', '\xA0', '\n', '\x14', '\x3', '\x15', '\x3', '\x15', '\x5', '\x15', 
		'\xA4', '\n', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', 
		'=', '\x2', '\x19', '\x4', '\x3', '\x6', '\x4', '\b', '\x5', '\n', '\x6', 
		'\f', '\a', '\xE', '\b', '\x10', '\t', '\x12', '\n', '\x14', '\v', '\x16', 
		'\f', '\x18', '\r', '\x1A', '\xE', '\x1C', '\xF', '\x1E', '\x10', ' ', 
		'\x11', '\"', '\x12', '$', '\x13', '&', '\x14', '(', '\x15', '*', '\x16', 
		',', '\x17', '.', '\x2', '\x30', '\x2', '\x4', '\x2', '\x3', '\t', '\x3', 
		'\x2', '\x33', ';', '\x3', '\x2', '\x32', ';', '\x4', '\x2', '\x43', '\\', 
		'\x63', '|', '\x6', '\x2', '\x32', ';', '\x43', '\\', '\x61', '\x61', 
		'\x63', '|', '\x3', '\x2', '$', '$', '\x4', '\x2', '\f', '\f', '\xF', 
		'\xF', '\x4', '\x2', '\v', '\v', '\"', '\"', '\x2', '\xC1', '\x2', '\x4', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\b', '\x3', '\x2', '\x2', '\x2', '\x2', '\n', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\f', '\x3', '\x2', '\x2', '\x2', '\x2', '\xE', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x10', '\x3', '\x2', '\x2', '\x2', '\x2', '\x12', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x14', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x16', '\x3', '\x2', '\x2', '\x2', '\x2', '\x18', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1A', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1C', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1E', '\x3', '\x2', '\x2', '\x2', 
		'\x2', ' ', '\x3', '\x2', '\x2', '\x2', '\x2', '\"', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '$', '\x3', '\x2', '\x2', '\x2', '\x3', '&', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '(', '\x3', '\x2', '\x2', '\x2', '\x3', '*', '\x3', 
		'\x2', '\x2', '\x2', '\x3', ',', '\x3', '\x2', '\x2', '\x2', '\x4', '\x32', 
		'\x3', '\x2', '\x2', '\x2', '\x6', '\x46', '\x3', '\x2', '\x2', '\x2', 
		'\b', 'J', '\x3', '\x2', '\x2', '\x2', '\n', 'L', '\x3', '\x2', '\x2', 
		'\x2', '\f', 'N', '\x3', '\x2', '\x2', '\x2', '\xE', 'P', '\x3', '\x2', 
		'\x2', '\x2', '\x10', 'Z', '\x3', '\x2', '\x2', '\x2', '\x12', '\\', '\x3', 
		'\x2', '\x2', '\x2', '\x14', '^', '\x3', '\x2', '\x2', '\x2', '\x16', 
		'`', '\x3', '\x2', '\x2', '\x2', '\x18', 'g', '\x3', '\x2', '\x2', '\x2', 
		'\x1A', 'i', '\x3', '\x2', '\x2', '\x2', '\x1C', 'k', '\x3', '\x2', '\x2', 
		'\x2', '\x1E', 'r', '\x3', '\x2', '\x2', '\x2', ' ', '{', '\x3', '\x2', 
		'\x2', '\x2', '\"', '}', '\x3', '\x2', '\x2', '\x2', '$', '\x90', '\x3', 
		'\x2', '\x2', '\x2', '&', '\x92', '\x3', '\x2', '\x2', '\x2', '(', '\x9F', 
		'\x3', '\x2', '\x2', '\x2', '*', '\xA3', '\x3', '\x2', '\x2', '\x2', ',', 
		'\xA7', '\x3', '\x2', '\x2', '\x2', '.', '\xB8', '\x3', '\x2', '\x2', 
		'\x2', '\x30', '\xBA', '\x3', '\x2', '\x2', '\x2', '\x32', '\x33', '\a', 
		'\x46', '\x2', '\x2', '\x33', '\x34', '\a', 'N', '\x2', '\x2', '\x34', 
		'\x35', '\a', 'X', '\x2', '\x2', '\x35', '\x36', '\a', 'J', '\x2', '\x2', 
		'\x36', '\x37', '\a', 'G', '\x2', '\x2', '\x37', '\x38', '\a', 'Z', '\x2', 
		'\x2', '\x38', '\x39', '\a', '\"', '\x2', '\x2', '\x39', '=', '\x3', '\x2', 
		'\x2', '\x2', ':', '<', '\v', '\x2', '\x2', '\x2', ';', ':', '\x3', '\x2', 
		'\x2', '\x2', '<', '?', '\x3', '\x2', '\x2', '\x2', '=', '>', '\x3', '\x2', 
		'\x2', '\x2', '=', ';', '\x3', '\x2', '\x2', '\x2', '>', '@', '\x3', '\x2', 
		'\x2', '\x2', '?', '=', '\x3', '\x2', '\x2', '\x2', '@', '\x41', '\x5', 
		'.', '\x17', '\x2', '\x41', '\x42', '\x3', '\x2', '\x2', '\x2', '\x42', 
		'\x43', '\b', '\x2', '\x2', '\x2', '\x43', '\x5', '\x3', '\x2', '\x2', 
		'\x2', '\x44', 'G', '\x5', '.', '\x17', '\x2', '\x45', 'G', '\x5', '\x30', 
		'\x18', '\x2', '\x46', '\x44', '\x3', '\x2', '\x2', '\x2', '\x46', '\x45', 
		'\x3', '\x2', '\x2', '\x2', 'G', 'H', '\x3', '\x2', '\x2', '\x2', 'H', 
		'I', '\b', '\x3', '\x2', '\x2', 'I', '\a', '\x3', '\x2', '\x2', '\x2', 
		'J', 'K', '\a', '<', '\x2', '\x2', 'K', '\t', '\x3', '\x2', '\x2', '\x2', 
		'L', 'M', '\a', '.', '\x2', '\x2', 'M', '\v', '\x3', '\x2', '\x2', '\x2', 
		'N', 'O', '\a', '>', '\x2', '\x2', 'O', '\r', '\x3', '\x2', '\x2', '\x2', 
		'P', 'Q', '\a', '@', '\x2', '\x2', 'Q', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'R', '[', '\a', '\x32', '\x2', '\x2', 'S', 'W', '\t', '\x2', '\x2', '\x2', 
		'T', 'V', '\t', '\x3', '\x2', '\x2', 'U', 'T', '\x3', '\x2', '\x2', '\x2', 
		'V', 'Y', '\x3', '\x2', '\x2', '\x2', 'W', 'U', '\x3', '\x2', '\x2', '\x2', 
		'W', 'X', '\x3', '\x2', '\x2', '\x2', 'X', '[', '\x3', '\x2', '\x2', '\x2', 
		'Y', 'W', '\x3', '\x2', '\x2', '\x2', 'Z', 'R', '\x3', '\x2', '\x2', '\x2', 
		'Z', 'S', '\x3', '\x2', '\x2', '\x2', '[', '\x11', '\x3', '\x2', '\x2', 
		'\x2', '\\', ']', '\a', ']', '\x2', '\x2', ']', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '^', '_', '\a', '_', '\x2', '\x2', '_', '\x15', '\x3', '\x2', 
		'\x2', '\x2', '`', '\x61', '\a', '\"', '\x2', '\x2', '\x61', '\x62', '\a', 
		'k', '\x2', '\x2', '\x62', '\x63', '\a', 'u', '\x2', '\x2', '\x63', '\x64', 
		'\a', '\"', '\x2', '\x2', '\x64', '\x65', '\x3', '\x2', '\x2', '\x2', 
		'\x65', '\x66', '\b', '\v', '\x3', '\x2', '\x66', '\x17', '\x3', '\x2', 
		'\x2', '\x2', 'g', 'h', '\a', '}', '\x2', '\x2', 'h', '\x19', '\x3', '\x2', 
		'\x2', '\x2', 'i', 'j', '\a', '\x7F', '\x2', '\x2', 'j', '\x1B', '\x3', 
		'\x2', '\x2', '\x2', 'k', 'o', '\t', '\x4', '\x2', '\x2', 'l', 'n', '\t', 
		'\x5', '\x2', '\x2', 'm', 'l', '\x3', '\x2', '\x2', '\x2', 'n', 'q', '\x3', 
		'\x2', '\x2', '\x2', 'o', 'm', '\x3', '\x2', '\x2', '\x2', 'o', 'p', '\x3', 
		'\x2', '\x2', '\x2', 'p', '\x1D', '\x3', '\x2', '\x2', '\x2', 'q', 'o', 
		'\x3', '\x2', '\x2', '\x2', 'r', 'v', '\a', '$', '\x2', '\x2', 's', 'u', 
		'\n', '\x6', '\x2', '\x2', 't', 's', '\x3', '\x2', '\x2', '\x2', 'u', 
		'x', '\x3', '\x2', '\x2', '\x2', 'v', 't', '\x3', '\x2', '\x2', '\x2', 
		'v', 'w', '\x3', '\x2', '\x2', '\x2', 'w', 'y', '\x3', '\x2', '\x2', '\x2', 
		'x', 'v', '\x3', '\x2', '\x2', '\x2', 'y', 'z', '\a', '$', '\x2', '\x2', 
		'z', '\x1F', '\x3', '\x2', '\x2', '\x2', '{', '|', '\a', '*', '\x2', '\x2', 
		'|', '!', '\x3', '\x2', '\x2', '\x2', '}', '~', '\a', '+', '\x2', '\x2', 
		'~', '#', '\x3', '\x2', '\x2', '\x2', '\x7F', '\x80', '\a', '\x64', '\x2', 
		'\x2', '\x80', '\x81', '\a', 't', '\x2', '\x2', '\x81', '\x82', '\a', 
		'\x63', '\x2', '\x2', '\x82', '\x83', '\a', 'x', '\x2', '\x2', '\x83', 
		'\x84', '\a', 'g', '\x2', '\x2', '\x84', '\x85', '\a', 'n', '\x2', '\x2', 
		'\x85', '\x91', '\a', '{', '\x2', '\x2', '\x86', '\x87', '\a', '\x65', 
		'\x2', '\x2', '\x87', '\x88', '\a', '\x63', '\x2', '\x2', '\x88', '\x89', 
		'\a', 'w', '\x2', '\x2', '\x89', '\x8A', '\a', 'v', '\x2', '\x2', '\x8A', 
		'\x8B', '\a', 'k', '\x2', '\x2', '\x8B', '\x8C', '\a', 'q', '\x2', '\x2', 
		'\x8C', '\x8D', '\a', 'w', '\x2', '\x2', '\x8D', '\x8E', '\a', 'u', '\x2', 
		'\x2', '\x8E', '\x8F', '\a', 'n', '\x2', '\x2', '\x8F', '\x91', '\a', 
		'{', '\x2', '\x2', '\x90', '\x7F', '\x3', '\x2', '\x2', '\x2', '\x90', 
		'\x86', '\x3', '\x2', '\x2', '\x2', '\x91', '%', '\x3', '\x2', '\x2', 
		'\x2', '\x92', '\x93', '\a', '\x30', '\x2', '\x2', '\x93', '\x94', '\x3', 
		'\x2', '\x2', '\x2', '\x94', '\x95', '\b', '\x13', '\x4', '\x2', '\x95', 
		'\'', '\x3', '\x2', '\x2', '\x2', '\x96', '\x97', '\a', 'h', '\x2', '\x2', 
		'\x97', '\x98', '\a', '\x63', '\x2', '\x2', '\x98', '\x99', '\a', 'n', 
		'\x2', '\x2', '\x99', '\x9A', '\a', 'u', '\x2', '\x2', '\x9A', '\xA0', 
		'\a', 'g', '\x2', '\x2', '\x9B', '\x9C', '\a', 'v', '\x2', '\x2', '\x9C', 
		'\x9D', '\a', 't', '\x2', '\x2', '\x9D', '\x9E', '\a', 'w', '\x2', '\x2', 
		'\x9E', '\xA0', '\a', 'g', '\x2', '\x2', '\x9F', '\x96', '\x3', '\x2', 
		'\x2', '\x2', '\x9F', '\x9B', '\x3', '\x2', '\x2', '\x2', '\xA0', ')', 
		'\x3', '\x2', '\x2', '\x2', '\xA1', '\xA4', '\x5', '.', '\x17', '\x2', 
		'\xA2', '\xA4', '\x5', '\x30', '\x18', '\x2', '\xA3', '\xA1', '\x3', '\x2', 
		'\x2', '\x2', '\xA3', '\xA2', '\x3', '\x2', '\x2', '\x2', '\xA4', '\xA5', 
		'\x3', '\x2', '\x2', '\x2', '\xA5', '\xA6', '\b', '\x15', '\x2', '\x2', 
		'\xA6', '+', '\x3', '\x2', '\x2', '\x2', '\xA7', '\xA8', '\a', '.', '\x2', 
		'\x2', '\xA8', '\xA9', '\a', '\"', '\x2', '\x2', '\xA9', '\xAA', '\a', 
		'g', '\x2', '\x2', '\xAA', '\xAB', '\a', 'x', '\x2', '\x2', '\xAB', '\xAC', 
		'\a', 'k', '\x2', '\x2', '\xAC', '\xAD', '\a', '\x66', '\x2', '\x2', '\xAD', 
		'\xAE', '\a', 'g', '\x2', '\x2', '\xAE', '\xAF', '\a', 'p', '\x2', '\x2', 
		'\xAF', '\xB0', '\a', '\x65', '\x2', '\x2', '\xB0', '\xB1', '\a', 'g', 
		'\x2', '\x2', '\xB1', '\xB2', '\a', '\x66', '\x2', '\x2', '\xB2', '\xB3', 
		'\a', '\"', '\x2', '\x2', '\xB3', '\xB4', '\a', '\x64', '\x2', '\x2', 
		'\xB4', '\xB5', '\a', '{', '\x2', '\x2', '\xB5', '\xB6', '\x3', '\x2', 
		'\x2', '\x2', '\xB6', '\xB7', '\b', '\x16', '\x4', '\x2', '\xB7', '-', 
		'\x3', '\x2', '\x2', '\x2', '\xB8', '\xB9', '\t', '\a', '\x2', '\x2', 
		'\xB9', '/', '\x3', '\x2', '\x2', '\x2', '\xBA', '\xBB', '\t', '\b', '\x2', 
		'\x2', '\xBB', '\x31', '\x3', '\x2', '\x2', '\x2', '\r', '\x2', '\x3', 
		'=', '\x46', 'W', 'Z', 'o', 'v', '\x90', '\x9F', '\xA3', '\x5', '\b', 
		'\x2', '\x2', '\x4', '\x3', '\x2', '\x4', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
